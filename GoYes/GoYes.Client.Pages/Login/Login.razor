@page "/"

@using System.ComponentModel.DataAnnotations
@using Token.HttpClientHelper
@using GoYes.Client.Api.login
@using GoYes.Client.Module.Login
@inject LoginApi loginApi
@inject NavigationManager navigation
@inject ILocalStorageService localStorage
<div class="login">
    <div class="headword">
        <div class="title">
            <div class="welcome">欢迎光临</div><br />
            <div class="welcome-text">欢迎来到token聊天室，这里有很多有趣的灵魂！</div>
        </div>
    </div>
    <div class="right">
        <div class="right-welcome">
            <div class="welcome-back">欢迎回来</div>
            <div>第三方登录</div>
            <div class="icon">
                <MAvatar>
                    <MImage Src="./img/gitee.png" Alt="Jack"></MImage>
                </MAvatar>
            </div>
        </div>
        <div class="inputs">
            <MForm Model="loginDto" EnableValidation @ref="_form">
                <MTextField @bind-Value="loginDto.AccountNumber"
                            Label="账号："
                            required>
                </MTextField>

                <MTextField @bind-Value="loginDto.Password"
                            Label="密码："
                            AppendIcon="@(_showPassword ? "mdi-eye" : "mdi-eye-off")"
                            Type="@(_showPassword ? "text" : "password")"
                            Counter="true"
                            OnAppendClick="() => _showPassword = !_showPassword"
                            required></MTextField>
                <MButton Color="error" Class="mr-4" OnClick="ResetAsync">重置</MButton>
                <MButton Color="success" Class="mr-4" OnClick="Register">注册账号</MButton>
                <MButton Color="success" Class="mr-4" OnClick="ValidateAsync">登录</MButton>
            </MForm>
        </div>

    </div>
</div>






@code {
    private LoginDto loginDto = new();

    private bool _showPassword = false;

    private MForm? _form;

    public override Task SetParametersAsync(ParameterView parameters)
    {
        loginDto.AccountNumber = "admin";
        loginDto.Password = "010426";
        return base.SetParametersAsync(parameters);
    }

    public async Task ResetAsync()
    {
        await _form!.ResetAsync();
    }

    public void Register()
    {
        navigation.NavigateTo("/register");
    }

    public async Task ValidateAsync()
    {
        if(!await _form!.ValidateAsync())
            return;

        var result = await loginApi.Login(loginDto);
        if(!string.IsNullOrEmpty(result))
        {
            await localStorage.SetItemAsStringAsync("Authorization", result);

            navigation.NavigateTo("/admin");
        }

    }
}
